package view;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Line2D;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JPanel;

import model.Board;


public final class BoardDisplay extends JPanel implements Observer {
    
    /** The default width value. */
    private static final int MIN_WIDTH = 200; 
    
    /** The default height value. */
    private static final int MIN_HEIGHT = 600;
    
    /** The minimum size this component should be. */
    private static final Dimension MIN_SIZE = new Dimension(MIN_WIDTH, MIN_HEIGHT);
    
    /** Scale, will be used for scale of block sizes. */
    private static final int SCALE = 20;
    
    /** The space between grid lines. */
    private int mySpacing;
    
    /** Width of the display panel. */
    private int myWidth;
    
    /** Hieght of the display panel. */
    private int myHeight;
    
    /** Size of display panel. */
    private Dimension mySize;
    
    /** The game board. */
    private final Board myBoard;
    
    /**
     * Constructs a graphical panel to display the board state.
     * @param theBoard 
     */
    public BoardDisplay(final Board theBoard) {
        super();
        
        myBoard = theBoard;
        myWidth = myBoard.getWidth() * SCALE;
        myHeight = myBoard.getHeight() * SCALE;
        System.out.println(myWidth + " x " + myHeight);
        mySize = new Dimension(myWidth, myHeight);
        mySpacing = myBoard.getHeight();
        setBackground(Color.black);
        setOpaque(true);
    }
    
    
    @Override
    protected void paintComponent(final Graphics theGraphics) {
        super.paintComponent(theGraphics);
        final Graphics2D g2d = (Graphics2D) theGraphics;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                             RenderingHints.VALUE_ANTIALIAS_ON);
        
        drawGrid(g2d);
    };
    
    private void drawGrid(final Graphics2D theGraphics2D) {
        final Line2D.Double gridLine = new Line2D.Double();
        final int height = this.getHeight();
        final int width = this.getWidth();
        
        theGraphics2D.setColor(Color.WHITE);
        theGraphics2D.setStroke(new BasicStroke(1));
        
        for (int i = 0; i < MIN_HEIGHT; i++) {
            if (i % mySpacing == 0) {
                gridLine.setLine(0, i, width, i);
                theGraphics2D.draw(gridLine);
            }
        }
        
        for (int i = 0; i < MIN_WIDTH; i++) {
            if (i % mySpacing == 0) {
                gridLine.setLine(i, 0, i, height);
                theGraphics2D.draw(gridLine);
            }
        } 
        
        
    }
 
    /** The minimum size of this drawingPanel. 
     * @return MIN_SIZE the dimension.
     */
    @Override
    public Dimension getMinimumSize() {
        return mySize;
    }
 
    /** The preferred size of this drawingPanel. 
     * @return MIN_SIZE the dimension.
     */
    @Override
    public Dimension getPreferredSize() {
        return mySize;
    }
    
    @Override
    public void update(final Observable theOberservable, final Object theObject) {
        System.out.println(myBoard.toString());
    }
}
